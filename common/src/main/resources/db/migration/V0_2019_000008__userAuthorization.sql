DROP TABLE IF EXISTS USER_AUTHORIZATION;

-- Old DB2 table: TZ1910
create TABLE USER_AUTHORIZATION
(
    ID                VARCHAR(36) NOT NULL PRIMARY KEY,
    BUSINESS_TASK_ID  INT         NOT NULL,
    VALID_FROM        DATE,
    VALID_TO          DATE,
    TYPE0             ENUM ('A', 'M'),
    STATE             ENUM ('OK', 'REJ', 'REQ', 'REX'),
    REQUESTED_BY      VARCHAR(8),
    REQUESTED_ON      DATE,
    SENT_TO           VARCHAR(8),
    ACCEPTED_BY       VARCHAR(8),
    ACCEPT_REJECT_ON  DATE,
    DE_THD_IDENTIFIER INT,
    LAST_CHANGE       BIGINT,
    CHANGED_BY        VARCHAR(8),
    CHANGE_LOCATION   VARCHAR(1) DEFAULT 'H',
    CLIENT_ROLE_ID    VARCHAR(36),
    USERS_ID          VARCHAR(36),
    USER_ROLE_ID      VARCHAR(36),
    CONSTRAINT FK_USER_AUTHORIZATION_CLIENTROLE FOREIGN KEY (CLIENT_ROLE_ID) REFERENCES CLIENT_ROLE_OWNERSHIP (ID),
    CONSTRAINT FK_USER_AUTHORIZATION_USERS FOREIGN KEY (USERS_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_USER_AUTHORIZATION_USER_ROLE FOREIGN KEY (USER_ROLE_ID) REFERENCES USER_ROLE (ID)
);

CREATE UNIQUE INDEX IDX_USER_AUTHORIZATION_1 ON USER_AUTHORIZATION (USER_ROLE_ID ASC, CLIENT_ROLE_ID ASC, USERS_ID ASC,
                                                                    VALID_FROM ASC, BUSINESS_TASK_ID ASC);

CREATE INDEX IDX_USER_AUTHORIZATION_2 ON USER_AUTHORIZATION (USER_ROLE_ID ASC, CLIENT_ROLE_ID ASC, USERS_ID ASC,
                                                             VALID_FROM ASC, BUSINESS_TASK_ID ASC);

CREATE INDEX IDX_USER_AUTHORIZATION_3 ON USER_AUTHORIZATION (USERS_ID ASC, USER_ROLE_ID ASC, STATE ASC, VALID_FROM ASC,
                                                             VALID_TO ASC, CLIENT_ROLE_ID ASC);

CREATE INDEX IDX_USER_AUTHORIZATION_4 ON USER_AUTHORIZATION (USERS_ID ASC);

CREATE INDEX IDX_USER_AUTHORIZATION_5 ON USER_AUTHORIZATION (USER_ROLE_ID ASC, CLIENT_ROLE_ID ASC, USERS_ID ASC, STATE
                                                             ASC, VALID_FROM ASC);

