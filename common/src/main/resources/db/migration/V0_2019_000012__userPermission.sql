DROP VIEW IF EXISTS USER_PERMISSION;

CREATE VIEW USER_PERMISSION AS
SELECT DISTINCT UUID()                                 AS ID,
                USERS.CLIENT                           AS CLIENT,
                USERS.USER_ID                          AS USER_ID,
                FUNCTIONAL_UNIT.IDENTIFIER             AS FU_ID,
                FUNCTIONAL_UNIT.NAME                   AS FU_NAME,
                SECURITY_ORGANIZATION.TRUSTWORTH_CLASS AS TRUSTWORTH_CLASS
FROM USER_AUTHORIZATION
         INNER JOIN ROLE_FUNCTIONAL_UNIT
                    ON ROLE_FUNCTIONAL_UNIT.ROLE_ID = USER_AUTHORIZATION.USER_ROLE_ID
         INNER JOIN USERS
                    ON USERS.ID = USER_AUTHORIZATION.USERS_ID
         INNER JOIN FUNCTIONAL_UNIT
                    ON FUNCTIONAL_UNIT.ID = ROLE_FUNCTIONAL_UNIT.FUNCTIONAL_UNIT_ID
         INNER JOIN CLIENT_AUTHORIZATION
                    ON CLIENT_AUTHORIZATION.USERS_ID = USER_AUTHORIZATION.USERS_ID
         INNER JOIN SECURITY_ORGANIZATION
                    ON SECURITY_ORGANIZATION.ID = CLIENT_AUTHORIZATION.SECU_ORGANIZATION_ID
         LEFT OUTER JOIN TRUSTWORTH_EXCLUSION
                         ON TRUSTWORTH_EXCLUSION.FUNCTIONAL_UNIT_ID = FUNCTIONAL_UNIT.ID
                             AND TRUSTWORTH_EXCLUSION.TRUSTWORTH_CLASS = SECURITY_ORGANIZATION.TRUSTWORTH_CLASS
                             AND TRUSTWORTH_EXCLUSION.LC_VALID_STATE_A = 'A'
WHERE USER_AUTHORIZATION.STATE = 'OK'
  AND CURRENT_DATE BETWEEN USER_AUTHORIZATION.VALID_FROM AND USER_AUTHORIZATION.VALID_TO
  AND TRUSTWORTH_EXCLUSION.TRUSTWORTH_CLASS IS NULL;
